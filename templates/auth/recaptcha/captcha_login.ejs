<script type="module" src="/js/js.cookie.min.js"></script>
<script nomodule defer src="/js/js.cookie.min.js"></script>
<style>
    .icon-password-unlock:hover {
        cursor: pointer;
    }
</style>
<script>
    const hasSpecialChar = (str) => {
        const special_chars = /[`!#$%^&*()+\=\[\]{}':"\\|<>\/?~]/;
        return special_chars.test(str);
    }

    const hasVietnameseChar = (str) => {
        const regex = /[đĐ\u0300-\u036f]/g;
        return regex.test(str.normalize('NFD'));
    }
    
    $(document).ready(function () {
        let rightCode = '';
        let valiIpt = jQuery('#valiIpt-login')[0];
        let toggleBtn = jQuery('#toggle-login');
        let submitBtn = jQuery('#submit-login');
        let thisForm = jQuery('#form-login');

        toggleBtn.click(function () {
            getImgValiCode();
        })

        submitBtn.click(function () {
            let username = thisForm.find('input[name="username"]').val();
            let password = thisForm.find('input[name="password"]').val();

            if (username === '') {
                _componentNoty(JSON.parse('<%- JSON.stringify(i18n.__("MSG_USERNAME_REQUIRED")) %>'), 'error');
                thisForm.find('input[name="username"]').focus();
                return false;
            }

            if (username.indexOf(' ') >= 0) {
                _componentNoty(JSON.parse('<%- JSON.stringify(i18n.__("MSG_USERNAME_HAS_SPACES")) %>'), 'error');
                thisForm.find('input[name="username"]').focus();
                return false;
            }

            if (hasSpecialChar(username)) {
                _componentNoty(JSON.parse('<%- JSON.stringify(i18n.__("MSG_USERNAME_HAS_SPECIAL_CHARACTERS")) %>'), 'error');
                thisForm.find('input[name="username"]').focus();
                return false;
            }

            if (hasVietnameseChar(username)) {
                _componentNoty(JSON.parse('<%- JSON.stringify(i18n.__("MSG_USERNAME_HAS_VIETNAMESE_CHARACTERS")) %>'), 'error');
                thisForm.find('input[name="username"]').focus();
                return false;
            }

            if (password === '') {
                _componentNoty(JSON.parse('<%- JSON.stringify(i18n.__("MSG_PASSWORD_REQUIRED")) %>'), 'error');
                thisForm.find('input[name="password"]').focus();
                return false;
            }
            if (valiIpt.value === '') {
                _componentNoty(JSON.parse('<%- JSON.stringify(i18n.__("MSG_CAPTCHA_REQUIRED")) %>'), 'error');
                thisForm.find('input[name="valiIpt"]').focus();
                return false;
            }

            if (valiIpt.value.toLowerCase() !== rightCode.toLowerCase()) {
                _componentNoty(JSON.parse('<%- JSON.stringify(i18n.__("MSG_INCORRECT_CAPTCHA")) %>'), 'error');
                thisForm.find('input[name="valiIpt"]').focus();
                return false;
            }

            valiIpt.value = '';
            thisForm.submit();
        });

        getImgValiCode();
        console.log('init:' + rightCode);

        function getImgValiCode() {
            let showNum = [];
            let canvasWinth = 100;
            let canvasHeight = 30;
            let canvas = jQuery('#valicode-login')[0];

            let context = canvas.getContext('2d');
            canvas.width = canvasWinth;
            canvas.height = canvasHeight;
            let sCode = 'A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,0,1,2,3,4,5,6,7,8,9';
            let saCode = sCode.split(',');
            let saCodeLen = saCode.length;
            for (let i = 0; i <= 3; i++) {
                let sIndex = Math.floor(Math.random() * saCodeLen);
                let sDeg = (Math.random() * 30 * Math.PI) / 180;
                let cTxt = saCode[sIndex];
                showNum[i] = cTxt.toLowerCase();
                let x = 10 + i * 20;
                let y = 20 + Math.random() * 8;
                context.font = 'bold 23px 微软雅黑';
                context.translate(x, y);
                context.rotate(sDeg);

                context.fillStyle = randomColor();
                context.fillText(cTxt, 0, 0);

                context.rotate(-sDeg);
                context.translate(-x, -y);
            }
            for (let i = 0; i <= 5; i++) {
                context.strokeStyle = randomColor();
                context.beginPath();
                context.moveTo(
                    Math.random() * canvasWinth,
                    Math.random() * canvasHeight
                );
                context.lineTo(
                    Math.random() * canvasWinth,
                    Math.random() * canvasHeight
                );
                context.stroke();
            }
            for (let i = 0; i < 30; i++) {
                context.strokeStyle = randomColor();
                context.beginPath();
                let x = Math.random() * canvasWinth;
                let y = Math.random() * canvasHeight;
                context.moveTo(x, y);
                context.lineTo(x + 1, y + 1);
                context.stroke();
            }
            rightCode = showNum.join('');
        }

        function randomColor() {
            let r = Math.floor(Math.random() * 256);
            let g = Math.floor(Math.random() * 256);
            let b = Math.floor(Math.random() * 256);
            return 'rgb(' + r + ',' + g + ',' + b + ')';
        }


        // Cookie tabs
        let cookieTab = Cookies.get('login-section-activetab');
        $('.nav.nav-tabs li a[href="' + cookieTab + '"]').click();

        $('.nav.nav-tabs li').on('click', function () {
            const activeTab = $(this).find('a').attr('href');
            // Set a cookie
            Cookies.set('login-section-activetab', activeTab);
        });
    });

</script>

<div class="form-group row">
    <div class="col-lg-6">
        <input type="text" name="valiIpt" id="valiIpt-login" placeholder="<%= i18n.__('MSG_ENTER_CAPTCHA_PLACEHOLDER') %>"
            class="form-control">
    </div>

    <div class="col-lg-6">
        <canvas id="valicode-login"></canvas>
        <i class="icon-sync" id="toggle-login" style="font-size: 24px; vertical-align: unset; cursor: pointer;"></i>
    </div>

</div>

<script>
    $(document).ready(function () {
        const thisForm = jQuery('#form-login');
        const rememberCheckbox = thisForm.find('input[name="remember_me"]');
        const usernameInput = thisForm.find('input[name="username"]');
        const passwordInput = thisForm.find('input[name="password"]');

        if (localStorage.getItem('username') && localStorage.getItem('password')) {
            usernameInput.val(localStorage.getItem('username'));
            passwordInput.val(localStorage.getItem('password'));

            rememberCheckbox.prop('checked', true);
        }

        thisForm.on("submit", function () {
            localStorage.setItem('username_bypast', usernameInput.val());

            if (rememberCheckbox.is(':checked')) {
                localStorage.setItem('username', usernameInput.val());
                localStorage.setItem('password', passwordInput.val());
            } else {
                localStorage.removeItem('username');
                localStorage.removeItem('password');
            }
        });

        // Nếu username không có dữ liệu thì lấy dữ liệu cũ từ bypast
        if (usernameInput.val() === ''  && localStorage.getItem('username_bypast')) {
            usernameInput.val(localStorage.getItem('username_bypast'));
        }
    });  
</script>