<script>
    const validateEmail = (email) => {
        return String(email)
            .toLowerCase()
            .match(
                /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/
            );
    };

    $(document).ready(function () {
        let rightCode = '';
        let valiIpt = jQuery('#valiIpt-register')[0];
        let toggleBtn = jQuery('#toggle-register');
        let submitRegisterBtn = jQuery('#submit-register');
        let thisForm = jQuery('#form-register');

        toggleBtn.click(function () {
            getImgValiCode();
        });
        
        submitRegisterBtn.click(function (e) {
            let username = thisForm.find('input[name="username"]').val();
            let password = thisForm.find('input[name="password"]').val();
            let email = thisForm.find('input[name="email"]').val();
            let fullname = thisForm.find('input[name="fullname"]').val();;
            let term = thisForm.find('input[name="remember"]').is(':checked');

            if (username === '') {
                _componentNoty(JSON.parse('<%- JSON.stringify(i18n.__("MSG_USERNAME_REQUIRED")) %>'), 'error');
                thisForm.find('input[name="username"]').focus();
                return false;
            }   
           
            if (username.length < 5 || username.length > 20) {
                _componentNoty(JSON.parse('<%- JSON.stringify(i18n.__("MSG_USERNAME_LIMIT_CHARACTERS")) %>'), 'error');
                thisForm.find('input[name="username"]').focus();
                return false;
            }

            if(username.indexOf(' ') >= 0){
                _componentNoty(JSON.parse('<%- JSON.stringify(i18n.__("MSG_USERNAME_HAS_SPACES")) %>'), 'error');
                thisForm.find('input[name="username"]').focus();
                return false;
            }

            if(hasSpecialChar(username)){
                _componentNoty(JSON.parse('<%- JSON.stringify(i18n.__("MSG_USERNAME_HAS_SPECIAL_CHARACTERS")) %>'), 'error');
                thisForm.find('input[name="username"]').focus();
                return false;
            }

            if(hasVietnameseChar(username)){
                _componentNoty(JSON.parse('<%- JSON.stringify(i18n.__("MSG_USERNAME_HAS_VIETNAMESE_CHARACTERS")) %>'), 'error');
                thisForm.find('input[name="username"]').focus();
                return false;
            }

            if (password === '') {
                _componentNoty(JSON.parse('<%- JSON.stringify(i18n.__("MSG_PASSWORD_REQUIRED")) %>'), 'error');
                thisForm.find('input[name="password"]').focus();
                return false;
            }

            if (password.length < 5 || password.length > 20) {
                _componentNoty(JSON.parse('<%- JSON.stringify(i18n.__("MSG_PASSWORD_LIMIT_CHARACTERS")) %>'), 'error');
                thisForm.find('input[name="password"]').focus();
                return false;
            }

            if (email === '') {
                _componentNoty(JSON.parse('<%- JSON.stringify(i18n.__("MSG_EMAIL_REQUIRED")) %>'), 'error');
                thisForm.find('input[name="email"]').focus();
                return false;
            }

            if (!validateEmail(email)) {
                _componentNoty(JSON.parse('<%- JSON.stringify(i18n.__("MSG_INVALID_MAIL_TYPE")) %>'), 'error');
                thisForm.find('input[name="email"]').focus();
                return false;
            }

            if (fullname === '') {
                _componentNoty(JSON.parse('<%- JSON.stringify(i18n.__("MSG_FULL_NAME_REQUIRED")) %>'), 'error');
                thisForm.find('input[name="fullname"]').focus();
                return false;
            }

            if (!term) {
                _componentNoty(JSON.parse('<%- JSON.stringify(i18n.__("MSG_TERM_NEED_ACCEPT")) %>'), 'error');
                thisForm.find('input[name="term"]').focus();
                return false;
            }

            if (valiIpt.value === '') {
                _componentNoty(JSON.parse('<%- JSON.stringify(i18n.__("MSG_CAPTCHA_REQUIRED")) %>'), 'error');
                thisForm.find('input[name="valiIpt"]').focus();
                return false;
            }

            if (valiIpt.value.toLowerCase() !== rightCode.toLowerCase()) {
                _componentNoty(JSON.parse('<%- JSON.stringify(i18n.__("MSG_INCORRECT_CAPTCHA")) %>'), 'error');
                thisForm.find('input[name="valiIpt"]').focus();
                return false;
            }

            valiIpt.value = '';
            thisForm.submit();
        });

        getImgValiCode();
        console.log('init:' + rightCode);

        function getImgValiCode() {
            let showNum = [];
            let canvasWinth = 100;
            let canvasHeight = 30;
            let canvas = jQuery('#valicode-register')[0];

            let context = canvas.getContext('2d');
            canvas.width = canvasWinth;
            canvas.height = canvasHeight;
            let sCode = 'A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,0,1,2,3,4,5,6,7,8,9';
            let saCode = sCode.split(',');
            let saCodeLen = saCode.length;
            for (let i = 0; i <= 3; i++) {
                let sIndex = Math.floor(Math.random() * saCodeLen);
                let sDeg = (Math.random() * 30 * Math.PI) / 180;
                let cTxt = saCode[sIndex];
                showNum[i] = cTxt.toLowerCase();
                let x = 10 + i * 20;
                let y = 20 + Math.random() * 8;
                context.font = 'bold 23px 微软雅黑';
                context.translate(x, y);
                context.rotate(sDeg);

                context.fillStyle = randomColor();
                context.fillText(cTxt, 0, 0);

                context.rotate(-sDeg);
                context.translate(-x, -y);
            }
            for (let i = 0; i <= 5; i++) {
                context.strokeStyle = randomColor();
                context.beginPath();
                context.moveTo(
                    Math.random() * canvasWinth,
                    Math.random() * canvasHeight
                );
                context.lineTo(
                    Math.random() * canvasWinth,
                    Math.random() * canvasHeight
                );
                context.stroke();
            }
            for (let i = 0; i < 30; i++) {
                context.strokeStyle = randomColor();
                context.beginPath();
                let x = Math.random() * canvasWinth;
                let y = Math.random() * canvasHeight;
                context.moveTo(x, y);
                context.lineTo(x + 1, y + 1);
                context.stroke();
            }
            rightCode = showNum.join('');
        }

        function randomColor() {
            let r = Math.floor(Math.random() * 256);
            let g = Math.floor(Math.random() * 256);
            let b = Math.floor(Math.random() * 256);
            return 'rgb(' + r + ',' + g + ',' + b + ')';
        }
    });

</script>

<div class="form-group row">
    <div class="col-lg-6">
        <input type="text" name="valiIpt" id="valiIpt-register" placeholder="<%= i18n.__('MSG_ENTER_CAPTCHA_PLACEHOLDER') %>"
            class="form-control">
    </div>
    
    <div class="col-lg-6">
        <canvas id="valicode-register"></canvas>
        <i class="icon-sync" id="toggle-register" style="font-size: 24px; vertical-align: unset; cursor: pointer;"></i>
    </div>
   
</div>

<script>

    // Show hidden password
    const showPassword = $('i.icon-password-unlock');
    const passField = $('input[name="password"]');

    showPassword.on('click', function () {
        if (passField.attr('type') === 'password') {
            passField.attr('type', 'text');
            showPassword.removeClass('icon-lock2').addClass('icon-unlocked2')
        } else {
            passField.attr('type', 'password');
            showPassword.removeClass('icon-unlocked2').addClass('icon-lock2');
        }
    });
</script>